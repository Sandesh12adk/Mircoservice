spring.application.name=service-two
server.port= 8081
# Point to Eureka server
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
#"Register me using my IP address instead of hostname."
#When your service registers with Eureka, it tells Eureka its hostname ?
# basically, the name of the machine or container it's running on.
eureka.instance.prefer-ip-address=true
#ses env var passed from Docker Compose.
#eureka.client.service-url.defaultZone=${EUREKA_SERVER_URL}
management.endpoints.web.exposure.include=info,circuitbreakers
info.name=service-two
info.description=This is one of the  second microservice of bha bha application

#Relate to Circuit Breaker
# Enable health indicator so actuator can report circuit breaker state
resilience4j.circuitbreaker.instances.myCircuitBreaker.registerHealthIndicator=true
# Number of calls to track in the sliding window
resilience4j.circuitbreaker.instances.myCircuitBreaker.slidingWindowSize=2
# Minimum number of calls required before calculating failure rate
resilience4j.circuitbreaker.instances.myCircuitBreaker.minimumNumberOfCalls=2
# Percentage of failures (in sliding window) to trip the circuit (open it)
resilience4j.circuitbreaker.instances.myCircuitBreaker.failureRateThreshold=50
# Duration to keep the circuit open before transitioning to half-open state
resilience4j.circuitbreaker.instances.myCircuitBreaker.waitDurationInOpenState=10s
# Number of trial calls allowed in half-open state to test service recovery
resilience4j.circuitbreaker.instances.myCircuitBreaker.permittedNumberOfCallsInHalfOpenState=2
#YOu can customize if you want any specific exception to be considerad as a failure so that fallback method is called
feign.circuitbreaker.enabled=true
# Explicitly tell Feign which circuit breaker to use