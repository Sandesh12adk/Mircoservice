# === App Identity ===
spring.application.name=service-two
server.port=8081

# === Eureka Client Config ===
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
eureka.instance.prefer-ip-address=true

# === Actuator endpoints exposed ===
management.endpoints.web.exposure.include=info,circuitbreakers,health

# === Custom info for actuator /info ===
info.name=service-two
info.description=This is the second microservice of bha bha application

# === Enable Circuit Breaker for Feign ===
spring.cloud.openfeign.circuitbreaker.enabled=true

# === Feign Client Circuit Breaker Config ===
# This name MUST match what is shown at /actuator/circuitbreakers
# e.g., for ServiceOneFeignClient.sayHello()
# Enables Actuator health monitoring for this specific circuit breaker
resilience4j.circuitbreaker.instances.ServiceOneFeignClientsayHello.registerHealthIndicator=true

# Number of calls tracked in the sliding window for calculating failure rate.
# If slidingWindowSize=5, the circuit breaker evaluates the last 5 calls.
resilience4j.circuitbreaker.instances.ServiceOneFeignClientsayHello.slidingWindowSize=5

# Minimum number of calls required before evaluating failure rate.
# Until 2 calls are made, the circuit breaker will not transition to OPEN.
resilience4j.circuitbreaker.instances.ServiceOneFeignClientsayHello.minimumNumberOfCalls=2

# Failure rate threshold percentage.
# If more than 50% of the calls in the sliding window fail, the circuit opens.
resilience4j.circuitbreaker.instances.ServiceOneFeignClientsayHello.failureRateThreshold=50

# How long the circuit should stay open before transitioning to half-open.
# During this time, all calls are blocked.
resilience4j.circuitbreaker.instances.ServiceOneFeignClientsayHello.waitDurationInOpenState=10s

# Number of test calls allowed when in HALF-OPEN state.
# If these succeed, circuit closes; if they fail, circuit re-opens.
resilience4j.circuitbreaker.instances.ServiceOneFeignClientsayHello.permittedNumberOfCallsInHalfOpenState=2

